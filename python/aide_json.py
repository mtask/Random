#!/usr/bin/python3

import subprocess
import re
import os
import argparse

"""
JSON logging for Advanced Intrusion Detection Environment (AIDE)
"""

def get_entry():
    entry = { "file": { "path": '', "attributes": '', "directory": ''}, "event": { "action": '', "provider": 'AIDE'} }
    return entry

def check_line(line, type):
    entry = None
    regex = '^(f|d).*:\s.*'
    if re.match(regex, line):
        entry = get_entry()
        details =line.split(":")[0]
        path = line.split(":")[1].strip()
        entry['event']['action'] = type
        if details.startswith('f'):
            entry['file']['path'] = path
        elif details.startswith('d'):
            entry['file']['directory'] = path
        entry['file']['attributes'] = details
        return entry

parser = argparse.ArgumentParser()
parser.add_argument("-v", "--verbose", help="increase output verbosity", action="store_true")
args = parser.parse_args()

try:
    result = subprocess.check_output(["aide", "-c", "/var/lib/aide/aide.conf.autogenerated", "--check"]).stdout
except subprocess.CalledProcessError as exc:
    result = exc.output

added = False
changed = False
removed = False
results = []
regex = '^(f|d).*:\s.*'
for line in result.decode('utf-8').split('\n'):
   res = None
   if 'Added entries' in line:
       added = True
       continue
   elif 'Removed entries' in line:
       removed = True
       added = False
       continue
   elif 'Changed entries' in line:
       changed = True
       removed = False
       continue
   if added:
       res = check_line(line, 'added')
   elif removed:
       res = check_line(line, 'removed')
   elif changed:
       res = check_line(line, 'changed')
   if res:
       results.append(res)

if not os.path.isdir('/var/log/aide/'):
    os.mkdir('/var/log/aide/')
    os.chmod('/var/log/aide/', 0o750)

with open('/var/log/aide/check.log', 'a+') as f:
    for result in results:
        f.write("{}\n".format(result))
        if args.verbose:
            print(result)
os.chmod('/var/log/aide/check.log', 0o600)
